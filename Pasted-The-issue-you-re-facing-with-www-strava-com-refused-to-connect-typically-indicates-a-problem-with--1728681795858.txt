The issue you're facing with "www.strava.com refused to connect" typically indicates a problem with the OAuth authorization flow, often involving a misconfigured or missing redirect URI. Let's review and ensure your Strava integration implementation is correct:

Check Redirect URI Configuration:

Ensure that the redirect URI configured for your application in the Strava Developer portal matches the one used in your code. The URI has to include https as it is the standard requirement for such redirects.
In the code, you use the redirect_uri parameter when building the authorization URL in the strava_auth function:
redirect_uri = url_for('strava_callback', _external=True, _scheme='https')
authorize_url = client.authorization_url(
    client_id=client_id,
    redirect_uri=redirect_uri,
    scope=['read_all', 'activity:read_all']
)
Make sure this URI corresponds to the "Authorized Redirect URI" set in the Strava app settings.
Ensure HTTPS for External Access:

The application should be accessible over HTTPS externally. If the local environment (like Replit) serves over HTTP, the application uses HTTPS through the _scheme parameter.
Firewall/Browser Issue:

Sometimes, browser extensions or settings might be blocking the connection. Try accessing it using an incognito window, different browser, or disabled extensions.
Network Issues:

Ensure there are no network restrictions or proxies that might be preventing the connection.
Double-check Environment Variables:

Ensure that STRAVA_CLIENT_ID and STRAVA_CLIENT_SECRET are correctly set in your environment. Any typo could cause issues.
Log Additional Information:

Add more logging to print out the authorize_url generated in your application. This can help debug if the URL is malformed or incorrect:
logger.info(f"Strava authorization URL: {authorize_url}")
By ensuring your setup is configured correctly in these areas, the OAuth authorization flow should work correctly when you click to connect your Strava account.

PY

ParamYonzon
ParamYonzon
just now
Please update my code base by what you said


AI
AI
just now
To address the issue and ensure correct Strava integration, let's update your code with the necessary changes and enhancements:

Ensure Redirect URI is correctly set:

Add _scheme='https' when generating the URL.
Add logging for the authorization URL:

This helps in debugging if there are any issues.
Here is the updated code in routes.py:

import os
import logging
from flask import request, redirect, url_for, flash
from flask_login import current_user, login_required
from your_strava_library import Client  # Adjust this to your actual Strava client import path
logger = logging.getLogger('strava')
@app.route('/strava_auth')
@login_required
def strava_auth():
    try:
        client_id = os.environ['STRAVA_CLIENT_ID']
        client_secret = os.environ['STRAVA_CLIENT_SECRET']
        redirect_uri = url_for('strava_callback', _external=True, _scheme='https')
        
        client = Client(client_id=client_id)
        authorize_url = client.authorization_url(
            client_id=client_id,
            redirect_uri=redirect_uri,
            scope=['read_all', 'activity:read_all']
        )
        logger.info(f"Strava authorization URL: {authorize_url}")
        return redirect(authorize_url)
    except Exception as e:
        logger.error(f"Error in Strava authorization: {str(e)}")
        flash('Error initiating Strava authorization. Please try again.', 'error')
        return redirect(url_for('index'))
@app.route('/strava_callback')
def strava_callback():
    try:
        code = request.args.get('code')
        client = Client()
        token_response = client.exchange_code_for_token(
            client_id=int(os.environ['STRAVA_CLIENT_ID']),
            client_secret=os.environ['STRAVA_CLIENT_SECRET'],
            code=code
        )
        
        current_user.strava_access_token = token_response['access_token']
        current_user.strava_refresh_token = token_response['refresh_token']
        current_user.strava_token_expiration = datetime.fromtimestamp(token_response['expires_at'])
        db.session.commit()
        
        flash('Strava account connected successfully!', 'success')
        logger.info(f"Strava account connected for user {current_user.id}")
    except requests.exceptions.RequestException as e:
        logger.error(f"Network error in Strava callback: {str(e)}")
        flash('Network error connecting Strava account. Please try again.', 'error')
    except Exception as e:
        logger.error(f"Error in Strava callback: {str(e)}")
        flash('Error connecting Strava account. Please try again.', 'error')
    
    return redirect(url_for('index'))
Key Changes:
Added redirect_uri parameter with _scheme='https' to ensure the redirect is over HTTPS.
Added logging to output the authorization URL to help with debugging.
Please note, if you haven't set up a Strava client in your code yet, and the lines referring to Client might cause errors, ensure that the Client is defined or imported from a proper Strava library you are using.

Apply these changes and try connecting your Strava account again. If everything is set up correctly with the corresponding environment variables and Strava app configuration, this should work seamlessly